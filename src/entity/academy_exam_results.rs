//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "academy_exam_results")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub cadet_id: i32,
    pub instructor_id: i32,
    pub exam_id: i32,
    #[sea_orm(column_type = "Double")]
    pub result: f64,
    #[sea_orm(column_type = "Text")]
    pub data: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::academy_cadets::Entity",
        from = "Column::CadetId",
        to = "super::academy_cadets::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AcademyCadets,
}

impl Related<super::academy_cadets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AcademyCadets.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
