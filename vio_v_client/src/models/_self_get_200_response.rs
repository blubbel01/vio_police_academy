/*
 * Vio-V API
 *
 * Unofficial OpenAPI spec for the Vio-V API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SelfGet200Response {
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "AccountID", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<i32>,
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "Playingtime", skip_serializing_if = "Option::is_none")]
    pub playingtime: Option<i32>,
    #[serde(rename = "Gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<i32>,
    #[serde(rename = "STVO", skip_serializing_if = "Option::is_none")]
    pub stvo: Option<i32>,
    #[serde(rename = "VehicleLimit", skip_serializing_if = "Option::is_none")]
    pub vehicle_limit: Option<i32>,
    #[serde(rename = "BusExp", skip_serializing_if = "Option::is_none")]
    pub bus_exp: Option<i32>,
    #[serde(rename = "Spawn", skip_serializing_if = "Option::is_none")]
    pub spawn: Option<String>,
    #[serde(rename = "SpawnID", skip_serializing_if = "Option::is_none")]
    pub spawn_id: Option<i32>,
    #[serde(rename = "Wanteds", skip_serializing_if = "Option::is_none")]
    pub wanteds: Option<i32>,
    #[serde(rename = "JailTime", skip_serializing_if = "Option::is_none")]
    pub jail_time: Option<i32>,
    #[serde(rename = "MethTime", skip_serializing_if = "Option::is_none")]
    pub meth_time: Option<i32>,
    #[serde(rename = "WeaponLicenseA", skip_serializing_if = "Option::is_none")]
    pub weapon_license_a: Option<i32>,
    #[serde(rename = "WeaponLicenseB", skip_serializing_if = "Option::is_none")]
    pub weapon_license_b: Option<i32>,
    #[serde(rename = "WeaponLicenseC", skip_serializing_if = "Option::is_none")]
    pub weapon_license_c: Option<i32>,
    #[serde(rename = "ActivityTimestamp", skip_serializing_if = "Option::is_none")]
    pub activity_timestamp: Option<i32>,
    #[serde(rename = "QuestID", skip_serializing_if = "Option::is_none")]
    pub quest_id: Option<String>,
    #[serde(rename = "QuestStatus", skip_serializing_if = "Option::is_none")]
    pub quest_status: Option<i32>,
    #[serde(rename = "PhoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<i32>,
    #[serde(rename = "FactionTime", skip_serializing_if = "Option::is_none")]
    pub faction_time: Option<i32>,
    #[serde(rename = "Grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<f32>,
    #[serde(rename = "Raiting", skip_serializing_if = "Option::is_none")]
    pub raiting: Option<i32>,
    #[serde(rename = "DrivingLicenseA", skip_serializing_if = "Option::is_none")]
    pub driving_license_a: Option<i32>,
    #[serde(rename = "FoodStatus", skip_serializing_if = "Option::is_none")]
    pub food_status: Option<i32>,
    #[serde(rename = "ActivityStep", skip_serializing_if = "Option::is_none")]
    pub activity_step: Option<i32>,
    #[serde(rename = "DrivingLicensesBlockedTimestamp", skip_serializing_if = "Option::is_none")]
    pub driving_licenses_blocked_timestamp: Option<i32>,
    #[serde(rename = "WantedArchiv", skip_serializing_if = "Option::is_none")]
    pub wanted_archiv: Option<String>,
    #[serde(rename = "Skin", skip_serializing_if = "Option::is_none")]
    pub skin: Option<String>,
    #[serde(rename = "Skills", skip_serializing_if = "Option::is_none")]
    pub skills: Option<String>,
    #[serde(rename = "DailyQuests", skip_serializing_if = "Option::is_none")]
    pub daily_quests: Option<String>,
    #[serde(rename = "BonusVehicleLimit", skip_serializing_if = "Option::is_none")]
    pub bonus_vehicle_limit: Option<i32>,
    #[serde(rename = "Accessory", skip_serializing_if = "Option::is_none")]
    pub accessory: Option<String>,
    #[serde(rename = "Achievements", skip_serializing_if = "Option::is_none")]
    pub achievements: Option<String>,
    #[serde(rename = "TotalStatus", skip_serializing_if = "Option::is_none")]
    pub total_status: Option<String>,
    #[serde(rename = "ActiveStatus", skip_serializing_if = "Option::is_none")]
    pub active_status: Option<String>,
    #[serde(rename = "SkillPoints", skip_serializing_if = "Option::is_none")]
    pub skill_points: Option<String>,
    #[serde(rename = "SkillBranches", skip_serializing_if = "Option::is_none")]
    pub skill_branches: Option<String>,
    #[serde(rename = "SkillSync", skip_serializing_if = "Option::is_none")]
    pub skill_sync: Option<i32>,
    #[serde(rename = "Boosts", skip_serializing_if = "Option::is_none")]
    pub boosts: Option<String>,
    #[serde(rename = "Tattoos", skip_serializing_if = "Option::is_none")]
    pub tattoos: Option<String>,
    #[serde(rename = "Licenses", skip_serializing_if = "Option::is_none")]
    pub licenses: Option<String>,
    #[serde(rename = "DailyBonus", skip_serializing_if = "Option::is_none")]
    pub daily_bonus: Option<String>,
    #[serde(rename = "SeasonPass", skip_serializing_if = "Option::is_none")]
    pub season_pass: Option<String>,
    #[serde(rename = "SeasonPassPoints", skip_serializing_if = "Option::is_none")]
    pub season_pass_points: Option<i32>,
    #[serde(rename = "SeasonPassPremium", skip_serializing_if = "Option::is_none")]
    pub season_pass_premium: Option<i32>,
    #[serde(rename = "WeaponsSkins", skip_serializing_if = "Option::is_none")]
    pub weapons_skins: Option<String>,
    #[serde(rename = "VehiclesSkins", skip_serializing_if = "Option::is_none")]
    pub vehicles_skins: Option<String>,
    #[serde(rename = "HalloweenCount", skip_serializing_if = "Option::is_none")]
    pub halloween_count: Option<i32>,
    #[serde(rename = "LoginTimestamp", skip_serializing_if = "Option::is_none")]
    pub login_timestamp: Option<i32>,
    #[serde(rename = "RegisterTimestamp", skip_serializing_if = "Option::is_none")]
    pub register_timestamp: Option<String>,
}

impl SelfGet200Response {
    pub fn new() -> SelfGet200Response {
        SelfGet200Response {
            id: None,
            account_id: None,
            name: None,
            playingtime: None,
            gender: None,
            stvo: None,
            vehicle_limit: None,
            bus_exp: None,
            spawn: None,
            spawn_id: None,
            wanteds: None,
            jail_time: None,
            meth_time: None,
            weapon_license_a: None,
            weapon_license_b: None,
            weapon_license_c: None,
            activity_timestamp: None,
            quest_id: None,
            quest_status: None,
            phone_number: None,
            faction_time: None,
            grade: None,
            raiting: None,
            driving_license_a: None,
            food_status: None,
            activity_step: None,
            driving_licenses_blocked_timestamp: None,
            wanted_archiv: None,
            skin: None,
            skills: None,
            daily_quests: None,
            bonus_vehicle_limit: None,
            accessory: None,
            achievements: None,
            total_status: None,
            active_status: None,
            skill_points: None,
            skill_branches: None,
            skill_sync: None,
            boosts: None,
            tattoos: None,
            licenses: None,
            daily_bonus: None,
            season_pass: None,
            season_pass_points: None,
            season_pass_premium: None,
            weapons_skins: None,
            vehicles_skins: None,
            halloween_count: None,
            login_timestamp: None,
            register_timestamp: None,
        }
    }
}

